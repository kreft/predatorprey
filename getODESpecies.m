function [speciesVals, timeOut] = ...
    getODESpecies(initSpecies, paramValsODE, simTimes, simMode)

% Call ODEs to generate species data based on parameters.
% 
% function [speciesVals, timeOut] = ...
%    getODESpecies(initSpecies, paramValsODE, simTimes, simMode)
%
% speciesVals   - species values for parameters passed in
% timeOut       - Did the simulation fail to produce values
%
% initSpecies   - Initial values for the simulations
% paramValsODE  - Parameters for the simulations
% simTimes      - Time points for which data should be plotted.
% simMode       - Which ODE equations should be used

% Version    Author       Date      Affiliation
% 1.00       J K Summers  16/08/18  Kreft Lab - School of Biosciences -
%                                   University of Birmingham
% 1.01       J K Summers  03/09/18  Added modes 31 & 32
% 1.02       J K Summers  17/09/18  Added mode 33

if simMode == 1
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3PIIVIIODE, simTimes, ...
        initSpecies, paramValsODE);
elseif simMode == 2
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN2PreyPropPIVIODE, simTimes, ...
        initSpecies, paramValsODE);
elseif simMode == 3
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN2PIIVIIODE, simTimes, ...
        initSpecies, paramValsODE);
elseif simMode == 4
    % Simplified model, but with Bdellovibrio phenotypic persistence
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IGPIIVIIODE, ...
        simTimes, initSpecies, paramValsODE);    
elseif (simMode == 5 || simMode == 7)
    % Simplified model, but with Bdellovibrio phenotypic persistence
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IGPIIVIIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 6
    % Simplified model, but with Bdellovibrio phenotypic persistence
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3PreyPropIGPIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 8
    % Holling type I for phage only
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IGPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 9
    % Single prey species - Bd Holling II, phage Holling I
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN1PIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 10
    % Holling type I for phage only
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN2PIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 11
    % Holling type I for phage and Bdellovibrio
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IGPIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 12
	% Same as mode 11, but interconversion between sensitive and persisters
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IPIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 13
	% Same as mode 12, but persistence rate based on dead prey
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3APIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 14
	% Same as mode 11, but both predators are Holling II
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IGPIIVIIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 15
	% Same as mode 11, but phage is Holling II
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IGPIVIIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif (simMode == 16 || simMode == 27 || simMode == 30 || simMode == 33)
    % Same as mode 8, but persistence development is proportional to prey
    % killed by bdellovibrio
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ABGPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 17
    % Same as mode 16, but persistence development is proportional to prey
    % killed by all means
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3AGPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 18
    % Same as mode 16, but persistence development is proportional to prey
    % killed by phage
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3AVGPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 19
    % Same as mode 16, but bdellovibrio is Holling type I
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ABGPIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 20
    % Same as mode 19, but phage is Holling type II
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ABGPIVIIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 21
    % Same as mode 20, but bdellovibrio is Holling type II
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ABGPIIVIIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 22
	% Same as mode 13, but persistence rate based only on prey killed by
	% bdellovibrio
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ABPIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 23
	% Same as mode 24, but persistence rate based on all prey killed
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3APIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 24
	% Same as mode 22, but bdellovibrio has Holling type II
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ABPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 25
	% Same as mode 12, but bdellovibrio has Holling type II
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3IPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 26
	% Same as mode 13, but persistence rate based only on prey killed by
	% phage
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3AVPIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 28
	% Same as mode 24, but persistence rate based on all prey killed
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ARPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif (simMode == 29 || simMode == 31 || simMode == 32)
    % Same as mode 27, but resistance develops over time
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN3ABGDRPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
elseif simMode == 34
      % Same as mode 27, but dual resistance
    [~, speciesVals, timeOut] = ...
        NottinghamPhageSim(@NottinghamPhageN4ABGDRPIIVIODE, ...
        simTimes, initSpecies, paramValsODE);
end

end